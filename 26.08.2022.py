# Задача 1
# Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенченского кредитного
# скоринга (ks):
# zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110]
# ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832]

# a) Найдите ковариацию этих двух величин с помощью элементраных действий, а затем с помощью функции cov numpy.
# Полученные значения должны быть равны.

import numpy as np
from statistics import mean
from scipy.stats import linregress

zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])

Mxy = sum(zp*ks)/len(zp)
Mx = sum(zp)/len(zp)
My = sum(ks)/len(ks)

Covar = Mxy - Mx*My

Cov = np.cov(zp, ks, ddof= 0)

print(Covar)
print(Cov)

# б) Найдите коэффициент корреляции Пирсона с помощью ковариации среднеквадратичных отклонений двух признаков,
# а затем с использованием функций из библиотек numpy и  pandas

dispersia1 = np.std(zp, ddof=1)
dispersia2 = np.std(ks, ddof=1)

sigma1 = dispersia1**0.5
sigma2 = dispersia2**0.5

rxy = Covar/(sigma1*sigma2)
print(rxy)

r = np.corrcoef(zp, ks)

print(r)

r1 = linregress(zp, ks)
print(r1)

# Задача 2. Измерены значения IQ выборки студентов, обучающихся в местных технических вузах:
# 131, 125, 115, 122, 131, 115, 107, 99, 125, 111.
# Известно, что в генеральной совокупности IQ распределен нормально. Найдите доверительный интервал
# для математического ожидания с надежностью 0.95.

list1 = np.array([131, 125, 115, 122, 131, 115, 107, 99, 125, 111])
p1 = 0.95
alpha1 = 1 - p1
n1 = 10
M1 = mean(list1)

# Независимые испытания выполнены с одинаковой точностю => это нормальное распределение
# Так как СКО неизвестно, следовательно будем пользоваться критерием Стьюдента
# Для начала найдем несмещенную дисперсию

disp1 = np.std(list1, ddof=1)
sigm1 = disp1**0.5

# Найдем необходимыe параметры для критерия Стьюдента

k1 = n1 - 1
p1 = 1 - alpha1/2
SE1 = sigm1/n1**0.5

t1 = 2.262

# Найдем границы интервала

l_granica_1 = M1 - t1*SE1
p_granica_1 = M1 + t1*SE1

print(f"Ответ задачи 2: [{round(l_granica_1, 4)}, {round(p_granica_1, 4)}] - интервал, который с вероятностью 95% покрывает истинное M(x) = a значение величины Х")

# Задача 3. Известно, что рост футболистов в сборной распределен нормально с дисперсией генеральной
# совокупности, равной 25 кв.см. Объем выборки равен 27, среднее выборочное составляет 174.2. Найдите
# доверительный интервал для математического ожидания, с надежностью 0.95.

sigm2 = 5
n2 = 27
M2 = 174.2
p2  = 0.95
alpha2 = 1 - p2

# так как известно СКО, то будем пользоваться критерием Лапласа
# найдем стандартную ошибку среднего

sr_oshibka = sigm2/(n2)**0.5

# так как мы имеем нормальное распределение, то можно использовать половину значений, поэтому рассчитаем z по таблице
# Лапласа для значения alpha/2 = 0.025

z2 = -1.96

#  Теперь рассчитаем доверительный интервал

p_granica2 = M2 - z2 * sr_oshibka
l_granica2 = M2 + z2 * sr_oshibka

print(f"Ответ задачи 3: [{round(l_granica2, 4)}, {round(p_granica2, 4)}] - интервал, который с вероятностью 95% покрывает истинное M(x) = {M2} генеральной совокупности")

